#!/usr/bin/env python3

"""
//===---------------------------------------------------------------------===//
//
// This source file is part of the SWAN open source project
//
// Copyright (c) 2020 Maple @ University of Alberta
// All rights reserved. This program and the accompanying materials (unless
// otherwise specified by a license inside of the accompanying material)
// are made available under the terms of the Eclipse Public License v2.0
// which accompanies this distribution, and is available at
// http://www.eclipse.org/legal/epl-v20.html
//
//===---------------------------------------------------------------------===//
"""

import os
import shutil
import sys
import re
import subprocess
from subprocess import Popen, PIPE, STDOUT

def info(msg, prepend = ""):
  sys.stdout.write(prepend + "[swan-swiftc] " + msg + "\n")

def error_info(msg, prepend = ""):
  sys.stderr.write("[swan-swiftc] ERROR: " + msg + "\n")

def write_sil(sil):
  output_file = "out.sil" # fallback if for whatever reason no .swift in args
  for arg in sys.argv[1:]:
    if arg.endswith(".swift"):
      output_file = arg + ".sil"
  with open(output_file, "w") as f:
    f.write(sil)
  return output_file

def run_swiftc_cmd():
  emit_sil = "-emit-sil -Xfrontend -gsil -Xllvm -sil-print-debuginfo -Xllvm -sil-print-before=SerializeSILPass"
  info("Adding " + emit_sil)

  cmd = ["swiftc", emit_sil, " ".join(sys.argv[1:])]
  string_cmd = " ".join(cmd)
  info("Running swiftc:\n    " + string_cmd + "\n", "\n")

  p = Popen(string_cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=True)
  stdout, stderr = p.communicate()
  if (p.returncode != 0):
    error_info("`swiftc` failed.\n")
    sys.stderr.write(stderr)
    exit(1)
  else:
    file = write_sil(stderr.split("\n", 1)[1])
    info("SIL written to " + file)

def main():
  if len(sys.argv) == 1:
    print("This tool is a wrapper for `swiftc`. It adds -emit-sil\nand writes swiftc's stdout to <swift_file>.sil.\n\nYou should add this executable to your PATH for convenience.\n\nTested on\nXcode 11.3.1 | Build version 11C505 | macOS Mojave 10.14.6")
    exit(0)
  run_swiftc_cmd()

if __name__ == "__main__":
  try:
    sys.exit(main())
  except KeyboardInterrupt:
    sys.exit(1)
